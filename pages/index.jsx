//ropsten-contract-address : "0xA35D7E91c9e165D18b2430E9163A13c56Ffc0A4e"

import Head from "next/head";
import { useState, useEffect } from "react";
import { ethers } from "ethers";
import runes from "../utils/Runes.json";

export default function Home() {
  const [currentAccount, setCurrentAccount] = useState("");
  const [buttonCalled, setButtonCalled] = useState(false);
  const [runeCount, setRuneCount] = useState(0);

  const ropstenContractAddress = "0xA35D7E91c9e165D18b2430E9163A13c56Ffc0A4e";

  const checkIfWalletConnected = async () => {
    try {
      !window.ethereum
        ? console.log("Please install Metamask.")
        : console.log("Metamask installed.");

      const accounts = await window.ethereum.request({
        method: "eth_accounts",
      });

      if (accounts.length !== 0) {
        const account = accounts[0];
        console.log("Found an authorized account:", account);
        setCurrentAccount(account);
      } else {
        console.log("No authorized account found");
      }
    } catch (err) {
      console.log(err.message);
    }
  };

  const connectWallet = async () => {
    try {
      if (!window.ethereum) {
        console.log("Get MetaMask!");
        return;
      }

      const accounts = await window.ethereum.request({
        method: "eth_requestAccounts",
      });

      console.log("Connected", accounts[0]);
      setCurrentAccount(accounts[0]);
    } catch (error) {
      console.log(error.message);
    }
  };

  const wave = async () => {
    try {
      if (window.ethereum) {
        const provider = new ethers.providers.Web3Provider(window.ethereum);
        const signer = provider.getSigner();
        const runeContract = new ethers.Contract(
          ropstenContractAddress,
          runes.abi,
          signer
        );
        const waveTxn = await runeContract.rune();
        console.log("Mining...", waveTxn.hash);

        await waveTxn.wait();
        console.log("Mined -- ", waveTxn.hash);

        let count = await runeContract.getTotalRunes();

        setRuneCount(count.toNumber());
        setButtonCalled(true);
      } else {
        console.log("Ethereum object doesn't exist!");
      }
    } catch (err) {
      console.log(err.message);
    }
  };

  useEffect(() => {
    checkIfWalletConnected();
  }, []);

  return (
    <div className="flex min-h-screen flex-col items-center bg-slate-100 pt-10 text-center">
      <Head>
        <title>Runes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="gradient-heading my-1 p-2 text-6xl font-extrabold tracking-tighter">
        Cool Waving App
      </div>
      <button className="button" onClick={wave}>
        Wave at Me
      </button>
      {currentAccount ? (
        <div className="gradient-text  text-xl font-semibold">
          Account is connected to Metamask
        </div>
      ) : (
        <button className="button" onClick={connectWallet}>
          Connect Wallet
        </button>
      )}
      {buttonCalled && (
        <div className="gradient-text  text-lg font-semibold">
          Runes: {runeCount}
        </div>
      )}
    </div>
  );
}
